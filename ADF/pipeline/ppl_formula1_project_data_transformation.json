{
	"name": "ppl_formula1_project_data_transformation",
	"properties": {
		"activities": [
			{
				"name": "Get Processed circuits Detail",
				"type": "GetMetadata",
				"dependsOn": [],
				"policy": {
					"timeout": "0.12:00:00",
					"retry": 0,
					"retryIntervalInSeconds": 30,
					"secureOutput": false,
					"secureInput": false
				},
				"userProperties": [],
				"typeProperties": {
					"dataset": {
						"referenceName": "ds_processed_layer_circuits",
						"type": "DatasetReference"
					},
					"fieldList": [
						"exists"
					],
					"storeSettings": {
						"type": "AzureBlobFSReadSettings",
						"recursive": true,
						"enablePartitionDiscovery": false
					},
					"formatSettings": {
						"type": "JsonReadSettings"
					}
				}
			},
			{
				"name": "If Raw Folder Exists",
				"type": "IfCondition",
				"dependsOn": [
					{
						"activity": "Get Processed circuits Detail",
						"dependencyConditions": [
							"Succeeded"
						]
					},
					{
						"activity": "Get Processed constructors Detail",
						"dependencyConditions": [
							"Succeeded"
						]
					},
					{
						"activity": "Get Processed drivers Detail",
						"dependencyConditions": [
							"Succeeded"
						]
					},
					{
						"activity": "Get Processed lap_times Detail",
						"dependencyConditions": [
							"Succeeded"
						]
					},
					{
						"activity": "Get Processed pit_stops Detail",
						"dependencyConditions": [
							"Succeeded"
						]
					},
					{
						"activity": "Get Processed qualifying Detail",
						"dependencyConditions": [
							"Succeeded"
						]
					},
					{
						"activity": "Get Processed races Detail",
						"dependencyConditions": [
							"Succeeded"
						]
					},
					{
						"activity": "Get Processed results Detail",
						"dependencyConditions": [
							"Succeeded"
						]
					}
				],
				"userProperties": [],
				"typeProperties": {
					"expression": {
						"value": "@and(\n    activity('Get Processed circuits Detail').output.exists,\n    and(\n        activity('Get Processed constructors Detail').output.exists,\n        and(\n            activity('Get Processed drivers Detail').output.exists,\n            and(\n                activity('Get Processed lap_times Detail').output.exists,\n                and(\n                    activity('Get Processed pit_stops Detail').output.exists,\n                    and(\n                        activity('Get Processed qualifying Detail').output.exists,\n                        and(\n                            activity('Get Processed races Detail').output.exists,\n                            activity('Get Processed results Detail').output.exists\n                        )\n                    )\n                )\n            )\n        )\n    )\n)\n",
						"type": "Expression"
					},
					"ifTrueActivities": [
						{
							"name": "1_race_results",
							"type": "DatabricksNotebook",
							"dependsOn": [],
							"policy": {
								"timeout": "0.12:00:00",
								"retry": 0,
								"retryIntervalInSeconds": 30,
								"secureOutput": false,
								"secureInput": false
							},
							"userProperties": [],
							"typeProperties": {
								"notebookPath": "/Users/hubin.smars@gmail.com/azure-cloud-datapipeline-EDA/src/data_transformation/presentation_layer/1.race_results",
								"baseParameters": {
									"p_data_source": {
										"value": "@variables('v_data_source')",
										"type": "Expression"
									},
									"p_file_date": {
										"value": "@formatDateTime(pipeline().parameters.p_window_end_date,'yyyy-MM-dd')\n",
										"type": "Expression"
									}
								}
							},
							"linkedServiceName": {
								"referenceName": "azure_cloud_datapipeline_EDA_project_databrick_ws",
								"type": "LinkedServiceReference"
							}
						},
						{
							"name": "2_driver_standings",
							"type": "DatabricksNotebook",
							"dependsOn": [
								{
									"activity": "1_race_results",
									"dependencyConditions": [
										"Succeeded"
									]
								}
							],
							"policy": {
								"timeout": "0.12:00:00",
								"retry": 0,
								"retryIntervalInSeconds": 30,
								"secureOutput": false,
								"secureInput": false
							},
							"userProperties": [],
							"typeProperties": {
								"notebookPath": "/Users/hubin.smars@gmail.com/azure-cloud-datapipeline-EDA/src/data_transformation/presentation_layer/2.driver_standings",
								"baseParameters": {
									"p_data_source": {
										"value": "@variables('v_data_source')",
										"type": "Expression"
									},
									"p_file_date": {
										"value": "@formatDateTime(pipeline().parameters.p_window_end_date,'yyyy-MM-dd')\n",
										"type": "Expression"
									}
								}
							},
							"linkedServiceName": {
								"referenceName": "azure_cloud_datapipeline_EDA_project_databrick_ws",
								"type": "LinkedServiceReference"
							}
						},
						{
							"name": "3_constructor_standings",
							"type": "DatabricksNotebook",
							"dependsOn": [
								{
									"activity": "1_race_results",
									"dependencyConditions": [
										"Succeeded"
									]
								}
							],
							"policy": {
								"timeout": "0.12:00:00",
								"retry": 0,
								"retryIntervalInSeconds": 30,
								"secureOutput": false,
								"secureInput": false
							},
							"userProperties": [],
							"typeProperties": {
								"notebookPath": "/Users/hubin.smars@gmail.com/azure-cloud-datapipeline-EDA/src/data_transformation/presentation_layer/3.constructor_standings",
								"baseParameters": {
									"p_data_source": {
										"value": "@variables('v_data_source')",
										"type": "Expression"
									},
									"p_file_date": {
										"value": "@formatDateTime(pipeline().parameters.p_window_end_date,'yyyy-MM-dd')\n",
										"type": "Expression"
									}
								}
							},
							"linkedServiceName": {
								"referenceName": "azure_cloud_datapipeline_EDA_project_databrick_ws",
								"type": "LinkedServiceReference"
							}
						},
						{
							"name": "4_calculated_race_results",
							"type": "DatabricksNotebook",
							"dependsOn": [
								{
									"activity": "2_driver_standings",
									"dependencyConditions": [
										"Succeeded"
									]
								},
								{
									"activity": "3_constructor_standings",
									"dependencyConditions": [
										"Succeeded"
									]
								}
							],
							"policy": {
								"timeout": "0.12:00:00",
								"retry": 0,
								"retryIntervalInSeconds": 30,
								"secureOutput": false,
								"secureInput": false
							},
							"userProperties": [],
							"typeProperties": {
								"notebookPath": "/Users/hubin.smars@gmail.com/azure-cloud-datapipeline-EDA/src/data_transformation/presentation_layer/4.calculated_race_results",
								"baseParameters": {
									"p_data_source": {
										"value": "@variables('v_data_source')",
										"type": "Expression"
									},
									"p_file_date": {
										"value": "@formatDateTime(pipeline().parameters.p_window_end_date,'yyyy-MM-dd')\n",
										"type": "Expression"
									}
								}
							},
							"linkedServiceName": {
								"referenceName": "azure_cloud_datapipeline_EDA_project_databrick_ws",
								"type": "LinkedServiceReference"
							}
						}
					]
				}
			},
			{
				"name": "Get Processed constructors Detail",
				"type": "GetMetadata",
				"dependsOn": [],
				"policy": {
					"timeout": "0.12:00:00",
					"retry": 0,
					"retryIntervalInSeconds": 30,
					"secureOutput": false,
					"secureInput": false
				},
				"userProperties": [],
				"typeProperties": {
					"dataset": {
						"referenceName": "ds_processed_layer_constructors",
						"type": "DatasetReference"
					},
					"fieldList": [
						"exists"
					],
					"storeSettings": {
						"type": "AzureBlobFSReadSettings",
						"recursive": true,
						"enablePartitionDiscovery": false
					},
					"formatSettings": {
						"type": "JsonReadSettings"
					}
				}
			},
			{
				"name": "Get Processed drivers Detail",
				"type": "GetMetadata",
				"dependsOn": [],
				"policy": {
					"timeout": "0.12:00:00",
					"retry": 0,
					"retryIntervalInSeconds": 30,
					"secureOutput": false,
					"secureInput": false
				},
				"userProperties": [],
				"typeProperties": {
					"dataset": {
						"referenceName": "ds_processed_layer_drivers",
						"type": "DatasetReference"
					},
					"fieldList": [
						"exists"
					],
					"storeSettings": {
						"type": "AzureBlobFSReadSettings",
						"recursive": true,
						"enablePartitionDiscovery": false
					},
					"formatSettings": {
						"type": "JsonReadSettings"
					}
				}
			},
			{
				"name": "Get Processed lap_times Detail",
				"type": "GetMetadata",
				"dependsOn": [],
				"policy": {
					"timeout": "0.12:00:00",
					"retry": 0,
					"retryIntervalInSeconds": 30,
					"secureOutput": false,
					"secureInput": false
				},
				"userProperties": [],
				"typeProperties": {
					"dataset": {
						"referenceName": "ds_processed_layer_lap_times",
						"type": "DatasetReference"
					},
					"fieldList": [
						"exists"
					],
					"storeSettings": {
						"type": "AzureBlobFSReadSettings",
						"recursive": true,
						"enablePartitionDiscovery": false
					},
					"formatSettings": {
						"type": "JsonReadSettings"
					}
				}
			},
			{
				"name": "Get Processed pit_stops Detail",
				"type": "GetMetadata",
				"dependsOn": [],
				"policy": {
					"timeout": "0.12:00:00",
					"retry": 0,
					"retryIntervalInSeconds": 30,
					"secureOutput": false,
					"secureInput": false
				},
				"userProperties": [],
				"typeProperties": {
					"dataset": {
						"referenceName": "ds_processed_layer_pit_stops",
						"type": "DatasetReference"
					},
					"fieldList": [
						"exists"
					],
					"storeSettings": {
						"type": "AzureBlobFSReadSettings",
						"recursive": true,
						"enablePartitionDiscovery": false
					},
					"formatSettings": {
						"type": "JsonReadSettings"
					}
				}
			},
			{
				"name": "Get Processed qualifying Detail",
				"type": "GetMetadata",
				"dependsOn": [],
				"policy": {
					"timeout": "0.12:00:00",
					"retry": 0,
					"retryIntervalInSeconds": 30,
					"secureOutput": false,
					"secureInput": false
				},
				"userProperties": [],
				"typeProperties": {
					"dataset": {
						"referenceName": "ds_processed_layer_qualifying",
						"type": "DatasetReference"
					},
					"fieldList": [
						"exists"
					],
					"storeSettings": {
						"type": "AzureBlobFSReadSettings",
						"recursive": true,
						"enablePartitionDiscovery": false
					},
					"formatSettings": {
						"type": "JsonReadSettings"
					}
				}
			},
			{
				"name": "Get Processed races Detail",
				"type": "GetMetadata",
				"dependsOn": [],
				"policy": {
					"timeout": "0.12:00:00",
					"retry": 0,
					"retryIntervalInSeconds": 30,
					"secureOutput": false,
					"secureInput": false
				},
				"userProperties": [],
				"typeProperties": {
					"dataset": {
						"referenceName": "ds_processed_layer_races",
						"type": "DatasetReference"
					},
					"fieldList": [
						"exists"
					],
					"storeSettings": {
						"type": "AzureBlobFSReadSettings",
						"recursive": true,
						"enablePartitionDiscovery": false
					},
					"formatSettings": {
						"type": "JsonReadSettings"
					}
				}
			},
			{
				"name": "Get Processed results Detail",
				"type": "GetMetadata",
				"dependsOn": [],
				"policy": {
					"timeout": "0.12:00:00",
					"retry": 0,
					"retryIntervalInSeconds": 30,
					"secureOutput": false,
					"secureInput": false
				},
				"userProperties": [],
				"typeProperties": {
					"dataset": {
						"referenceName": "ds_processed_layer_results",
						"type": "DatasetReference"
					},
					"fieldList": [
						"exists"
					],
					"storeSettings": {
						"type": "AzureBlobFSReadSettings",
						"recursive": true,
						"enablePartitionDiscovery": false
					},
					"formatSettings": {
						"type": "JsonReadSettings"
					}
				}
			}
		],
		"parameters": {
			"p_window_end_date": {
				"type": "string"
			}
		},
		"variables": {
			"v_data_source": {
				"type": "String",
				"defaultValue": "Ergast API"
			}
		},
		"annotations": [],
		"lastPublishTime": "2025-06-29T06:04:57Z"
	},
	"type": "Microsoft.DataFactory/factories/pipelines"
}